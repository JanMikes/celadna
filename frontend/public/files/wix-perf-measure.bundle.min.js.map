{"version":3,"sources":["webpack://[name]/webpack/universalModuleDefinition","webpack://[name]/webpack/bootstrap","webpack://[name]/./utils/utils.js","webpack://[name]/./utils/constants.js","webpack://[name]/./utils/wixBiSession.js","webpack://[name]/./actions/loadInfo.js","webpack://[name]/../node_modules/process/browser.js","webpack://[name]/./utils/windowEvents.js","webpack://[name]/./entries/hidden.js","webpack://[name]/./utils/config.js","webpack://[name]/./utils/consent.js","webpack://[name]/./entries/navStart.js","webpack://[name]/./entries/navFinish.js","webpack://[name]/./utils/storage.js","webpack://[name]/./entries/wixFinish.js","webpack://[name]/./utils/observe.js","webpack://[name]/./utils/observeResources.js","webpack://[name]/./utils/collectResources.js","webpack://[name]/./utils/promisifyObserver.js","webpack://[name]/./entries/fcp.js","webpack://[name]/./polyfills/fcp.js","webpack://[name]/./entries/tti-tbt.js","webpack://[name]/./polyfills/longtasks.js","webpack://[name]/./entries/lcp.js","webpack://[name]/./entries/cls.js","webpack://[name]/./utils/takeRecords.js","webpack://[name]/./utils/interaction.js","webpack://[name]/./entries/fid.js","webpack://[name]/./polyfills/fid.js","webpack://[name]/./utils/sequence.js","webpack://[name]/./actions/markAndMeasure.js","webpack://[name]/./entries/pages.js","webpack://[name]/./entries/crux.js","webpack://[name]/./entries/crux-cls.js","webpack://[name]/./actions/log.js","webpack://[name]/./entries/responsiveness.js","webpack://[name]/./index.js","webpack://[name]/./entries/client.js","webpack://[name]/./entries/wixStart.js","webpack://[name]/./entries/scripts.js","webpack://[name]/./entries/images.js","webpack://[name]/./entries/fonts.js","webpack://[name]/./info/alert.js"],"names":["root","factory","exports","module","define","amd","self","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","noop","label","MARKER","rejector","Promise","reject","isType","type","v","isUndefined","isNumber","isBoolean","round","obj","entries","filter","reduce","acc","Math","excludeSearch","url","replace","getFirstEntryByType","performance","entryType","getEntriesByType","extract","promise","field","then","handleFinish","cbs","cb","terminate","index","indexOf","splice","length","disconnectHandler","observer","disconnect","closestId","element","id","closestSelector","closestContainer","selector","closest","addField","target","test","allFulfilled","promises","allSettled","results","status","map","result","batch","resolve","values","assign","CLS_FACTOR","PIXEL_RATIO_FACTOR","MAX_DOWNLOAD_SPEED","LISTEN","capture","passive","LISTEN_ONCE","once","getWixBiSession","window","wixBiSession","bi","info","loadInfo","state","document","src","measurements","getCurrentLcp","cls","invoke","fail","console","process","env","script","createElement","onload","onerror","head","appendChild","requirejs","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","concat","drainQueue","timeout","len","run","marker","runClearTimeout","Item","array","nextTick","args","Array","arguments","push","apply","title","browser","argv","version","versions","on","addListener","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","dir","umask","addEventListener","listener","removeEventListener","dcl","readyState","load","pagehide","isState","eventName","delay","startTime","_resolve","ev","timeStamp","stateToPromise","fireEvent","detail","dispatchEvent","CustomEvent","VISIBILITY","hidden","isHidden","done","visibilitychange","visibilityState","config","__proto__","dataset","data","forEach","Number","isNaN","exec","clientType","newClsMethod","resourceDebounce","taskDelta","longTask","eventDelta","ttiDurationInc","ignoreResources","makeLabel","fcpPolyfill","fcpPolyfillId","pageEvent","clsEvent","storagePrefix","sessionDelta","noMeasure","log","ESSENTIAL_FIELDS","analytics","cores","memory","effectiveType","rtt","download","saveData","dns","tcp","ssl","ttfb","redirect","fetchStart","response","navigationType","protocol","pageCaching","_brandId","viewerName","dc","microPop","cdn","msid","pageId","fp","fcp","tti","tbt","lcp","lcpSize","lcpTag","lcpResourceType","lcpContentType","lcpFontClass","lcpInLightbox","countCls","clsId","clsTag","clsOld","ttlb","transferSize","decodedBodySize","isSsr","ssrDuration","ssrTimestamp","duration","action","pn","count","simLH6","isMobile","maybeBot","btype","worstLatencyOverBudget","totalLatencyOverBudget","numOfResponsivenessEvents","worstLatency","fixURL","short","analyticsAllowed","consentPolicyManager","getCurrentConsentPolicy","policy","RETRY","navFinish","timing","navigationStart","domContentLoadedEventEnd","loadEventEnd","responseEnd","domInteractive","domContentLoadedEventStart","navigation","requestStart","responseStart","encodedBodySize","MAYBE","determineCaching","storageOp","localStorage","removeItem","FIELDS","MAP_NAME","is_rollout","is_platform_loaded","isjp","wixFinish","interactive","model","fetchDynamicModel","visitorId","clientSideRender","bsi","commonConfig","viewerModel","siteFeaturesConfigs","isWelcome","requestCloseWelcomeScreen","rendererModel","landingPageId","firstPageId","ssrInfo","renderBodyTime","timeSpentInSSR","renderTimeStamp","storage","prevSession","k","getItem","currSession","updateTimestamp","addSessionDelta","timestamp","Date","now","setItem","observe","PerformanceObserver","buffered","more","supportedEntryTypes","includes","list","getEntries","entryTypes","isScript","initiatorType","isImage","isFont","observeResources","ignores","split","some","ignore","finish","min","max","collectResources","tag","debounce","resources","timer","extra","takeRecords","tbd","firstResponse","lastResponse","ttfbs","sort","half","mttfb","attfb","tagLabel","toUpperCase","slice","promisifyObserver","paints","resolvePaint","when","getElementById","tti_tbt","start","interaction","finished","ltDone","ltTimer","lts","ltStop","requestAnimationFrame","cancelAnimationFrame","getTaskDuration","longtasks","checkDone","dclPromise","resourceDone","resourceTimer","checkResourceDone","resourceStop","rs","interactionEnd","tail","findIndex","found","llt","calc_tti","innerHeight","calc_tbt","iframes","querySelectorAll","pageHeight","body","offsetHeight","screens","scrollHeight","lcpResultValue","size","container","tagName","classList","getFontClass","cid","toLowerCase","inLightbox","lcpResult","fetch","method","headers","WINDOW","MAX_SIZE","MAX_INTERVAL","NO_WINDOW","shouldGetElement","hadRecentInput","sources","node","currentRect","area","width","height","entry","current","sequence","set","Map","nodes","a","b","nodeType","Node","ELEMENT_NODE","parentElement","EVENT_TYPES","event_types","prev","eventType","onInput","cancelable","end","onPointerUp","notify","removePointerEventListeners","onPointerDown","fid","processingStart","fidPolyfill","next","report","prepareMeasurement","iterator","asyncIterator","payload","freeze","measurement","applyConsent","TTI_LABEL","LCP_LABEL","measure","options","pages","origin","getCurrentURL","subEntryType","_report","reduceRight","undefined","durationThreshold","measuring","destination","urlChanged","measurePage","location","href","cwvFuncs","crux_cls","crux","prevCls","doLog","isInfoCalled","startMeasureResponsiveness","isLoggingEnabled","isLogging","interactionMap","interactionId","latency","budget","latencyOverBudget","oldLatencyOverBudget","currentResponsivenessMeasure","currentScript","environment","screen","screenRes","availScreenRes","availWidth","availHeight","windowInner","innerWidth","windowOuter","outerWidth","outerHeight","devicePixelRatio","colorDepth","orientation","navigator","connection","deviceMemory","hardwareConcurrency","floor","downlink","networkType","matchMedia","mql","reducedMotion","matches","getBattery","charging","level","lowBattery","client","domainLookupStart","domainLookupEnd","redirectStart","redirectEnd","connectStart","connectEnd","secureConnectionStart","referrer","nextHopProtocol","navStart","thunderboltVersion","boltVersion","site","metaSiteId","msId","brand","viewerInfo","isResponsive","renderType","wixStart","visibility","initialPaint","lastPaint","lcpPromise","race","lcpFound","records","ss","scripts","is","images","fs","fonts","loaded","cruxResult","update","lcpEntryType","lcpValue","addProp","defineProperties","prop","addGetters","obtainMeasurements","together","individually","find","et","mark","lcpFirst","ttiDuration","clearMarks","markAndMeasure","URLSearchParams","search","keys","all","alert"],"mappings":"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","file":"wix-perf-measure.bundle.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"wix-perf-measure\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wix-perf-measure\"] = factory();\n\telse\n\t\troot[\"wix-perf-measure\"] = factory();\n})((typeof self !== 'undefined' ? self : this), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"https://static.parastorage.com/services/wix-perf-measure/1.721.0/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 5);\n","//@ts-check\nimport {MARKER} from './constants.js';\n\n/**\n * @typedef {new (callback: PerformanceObserverCallback) => PerformanceObserver} PerformanceObserverType\n * @typedef {[Window & typeof globalThis,Performance,PerformanceObserverType,((handler:TimerHandler,timeout?:number) => number),((handle:number) => void)]} State\n */\n\nexport function noop() {}\n\nexport const label = s => `${MARKER}${s}`;\n\nexport function rejector(value) {\n    return () => Promise.reject(value);\n}\n\nfunction isType(type) {\n    return v => typeof v === type;\n}\nexport const isUndefined = isType('undefined');\nexport const isNumber = isType('number');\nexport const isBoolean = isType('boolean');\nexport const isString = isType('string');\n\nexport function round(obj) {\n    return Object\n        .entries(obj)\n        .filter(([, value]) => typeof value === 'number')\n        .reduce((acc, [key, value]) => {\n            acc[key] = Math.round(value);\n            return acc;\n        }, obj);\n}\n\n/**\n * Shorten URL to imporant part\n * @param {string} url\n */\nexport function excludeSearch(url) {\n    return url && url.replace(/\\?.*$/, '');\n}\n\n/**\n * Return the first entry for an entry type, if it exists\n * @param {Performance} performance \n * @param {string} entryType \n * @returns {PerformanceEntry|undefined}\n */\nexport function getFirstEntryByType(performance, entryType) {\n    return performance.getEntriesByType?.(entryType)?.[0];\n}\n\n/**\n * Extracts a field value from a promise return\n * @param {Promise} promise \n * @param {string|number} field \n */\nexport function extract(promise, field) {\n    return promise.then(({[field]: value}) => value);\n}\n\n/**\n * Finish function factory\n * @template T\n * @param {Array<T>} cbs \n * @param {T} cb \n * @param {() => void} terminate\n */\nexport function handleFinish(cbs, cb, terminate) {\n    return () => {\n        const index = cbs.indexOf(cb);\n        if (index > -1) {\n            cbs.splice(index, 1);\n            if (cbs.length === 0) {\n                terminate();\n            }\n        }\n    };\n}\n\n/**\n * Create disconnect handler\n * @param {PerformanceObserver} observer \n */\nexport function disconnectHandler(observer) {\n    return () => observer.disconnect();\n}\n\n/**\n * Get id of closest containing ancestor that has an id, or id param if provided\n * @param {Element} [element]\n * @param {string} [id]\n */\nexport function closestId(element, id) {\n    return id || closestSelector(element, '*[id]')?.id;\n}\n\n/**\n * Get container element\n * @param {Element} [element]\n */\nexport function closestContainer(element) {\n    return closestSelector(element, 'h1,h2,h3,h4,h5,h6,p,picture,wix-image,article,section') || element;\n}\n\n/**\n * @param {Element} element\n * @param {string} selector\n */\nexport function closestSelector(element, selector) {\n    return element?.closest(selector);\n}\n\n/**\n * Add field value to property bag, coercing to boolean if name starts with \"is\"\n * @param {Object} target \n * @param {string} key\n * @param {*} value \n */\nexport function addField(target, key, value) {\n    if (!isUndefined(value)) {\n        target[key] = /^is/.test(key) ? !!value : value;\n    }\n}\n\n/**\n * Waits until all promises are settled, and return promise with fulfilled values\n * @template T\n * @param {Promise<T>[]} promises \n */\nexport function allFulfilled(promises) {\n    return /** @type {any} */(Promise).allSettled(promises).then(results => results\n        .filter(({status}) => status === 'fulfilled')\n        .map(result => result.value));\n}\n\n/**\n * Combine multiple fulfilled entries into a single entry\n * @param {string} entryType \n * @param  {...Promise} promises \n */\nexport function batch(entryType, ...promises) {\n    return new Promise(resolve => {\n        allFulfilled(promises).then(values => {\n            const result = values.reduce((acc, value) => Object.assign(acc, value), {});\n            result.entryType = entryType;\n            resolve(result);\n        });\n    });\n}\n","//@ts-check\nexport const CLS_FACTOR = 10000;\nexport const PIXEL_RATIO_FACTOR = 10;\nexport const MAX_DOWNLOAD_SPEED = 10000;\n\nexport const MARKER = '\\u23f1'; // stopwatch\n\nexport const LISTEN = {\n    capture: true,\n    passive: true\n};\n\nexport const LISTEN_ONCE = {\n    ...LISTEN,\n    once: true\n};\n","//@ts-check\n/**\n * Get wixBiSession for Wix sessions\n * @param {Object} window\n */\nexport default function getWixBiSession(window) {\n    return window.wixBiSession || window.bi?.wixBiSession;\n}\n","import {noop} from '../utils/utils.js';\n\n//@ts-check\n/* global process, requirejs */\nconst INFO_LABEL = 'wix-perf-measure-info';\n\n/**\n * @type {Promise}\n */\nlet info;\n\n/**\n * @typedef {import('../utils/utils.js').State} State\n */\n\n/**\n * Load and execgit statute info helper\n * @param {State} state \n * @param {Document} document\n * @param {string} src\n * @param {Promise[]} measurements\n * @param {import('../entries/crux.js').getCurrentLcp} getCurrentLcp\n * @param {(state: State) => import('../entries/cls.js').LayoutShiftResult} cls\n */\nexport default function loadInfo(state, document, src, measurements, getCurrentLcp, cls) {\n    Object.defineProperty(measurements, 'info', {\n        value() {\n            const [window] = state;\n            if (typeof process === 'undefined') {\n                /** @type {Object} */ (window).process = {env: {}}; // It's OK to leak it for debugging\n            }\n            if (process.env.NODE_ENV !== 'production') { // removed in production\n                if (!info) {\n                    info = import('../info.js');\n                }\n                return info.then(invoke).catch(fail);\n            }\n            if (!info) {\n                info = new Promise((resolve, reject) => {\n                    if (!src) {\n                        return reject();\n                    }\n                    const script = document.createElement('script');\n                    script.src = src.replace('measure.', 'measure-info.');\n                    script.onload = resolve;\n                    script.onerror = reject;\n                    document.head.appendChild(script);\n                });\n            }\n            info.then(() => {\n                // @ts-ignore\n                if (typeof requirejs === 'function') {\n                    // @ts-ignore\n                    requirejs([INFO_LABEL], invoke, fail);\n                } else {\n                    invoke(window[INFO_LABEL]);\n                }\n            }).catch(fail);\n\n            function invoke(r) {\n                if (r) {\n                    r.default(measurements, getCurrentLcp().catch(noop), cls(state));\n                } else {\n                    fail();\n                }\n            }\n            function fail() {\n                console.info('Failed to load info'); // eslint-disable-line no-console\n            }\n        }\n    });\n}\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","//@ts-check\nimport {LISTEN, LISTEN_ONCE} from './constants.js';\n\n/**\n * Hook up DOM event handler\n * @param {Window | Document | Element} target \n * @param {string} type \n * @param {EventListenerOrEventListenerObject} listener \n * @param {boolean} [once = true] \n */\nexport function addEventListener(target, type, listener, once = true) {\n    target.addEventListener(type, listener, once ? LISTEN_ONCE : LISTEN);\n}\n/**\n * Remove DOM event handler\n * @param {Window | Document | Element} target \n * @param {string} type \n * @param {EventListenerOrEventListenerObject} listener \n * @param {boolean} [once = true] \n */\nexport function removeEventListener(target, type, listener, once = true) {\n    target.removeEventListener(type, listener, once ? LISTEN_ONCE : LISTEN);\n}\n\nexport const dcl = once(readyState => readyState !== 'loading', 'DOMContentLoaded');\nexport const load = once(readyState => readyState === 'complete', 'load');\nexport const pagehide = once(() => false, 'pagehide', false);\n\nfunction stateToPromise(window, isState, eventName, delay) {\n    return new Promise(resolve => {\n        if (isState(window.document.readyState)) {\n            resolve({startTime: 0});\n        } else {\n            const _resolve = ev => resolve({startTime: ev.timeStamp}); \n            const handler = delay ?\n                ev => setTimeout(() => _resolve(ev), 0) :\n                _resolve;\n            addEventListener(window, eventName, handler);\n        }\n    });\n}\n/**\n * @param {(s:string) => (boolean)} isState \n * @param {string} eventName\n * @param {boolean} [delay = true]\n * @returns {(window: Window) => Promise<{startTime: number}>}\n */\nfunction once(isState, eventName, delay = true) {\n    let promise;\n    return window => {\n        if (!promise) {\n            promise = stateToPromise(window, isState, eventName, delay);\n        }\n        return promise;\n    };\n}\n\n/**\n * Dispatch a custom event\n * @param {Object} window \n * @param {string} label \n * @param {any} detail \n * @param {EventTarget} [target=window] \n */\nexport function fireEvent(window, label, detail, target = window) {\n    target.dispatchEvent(new window.CustomEvent(label, {\n        detail\n    }));\n}\n","//@ts-check\nimport {addEventListener, removeEventListener, pagehide} from '../utils/windowEvents.js';\n\nconst entryType = 'visibility';\nconst VISIBILITY  = 'visibilitychange';\n\n/**\n * Get visibility attributes\n * @param {import('../utils/utils.js').State} state\n * @return {Promise<{entryType: 'visibility', type: string, startTime: number}>}\n */\nexport default function hidden([window]) {\n    return new Promise(resolve => {\n        if (isHidden(window)) {\n            return done(VISIBILITY, 0);\n        }\n\n        addEventListener(window, VISIBILITY, visibilitychange, false);\n        function visibilitychange({timeStamp}) {\n            if (isHidden(window)) {\n                removeEventListener(document, VISIBILITY, visibilitychange, false);\n                done(VISIBILITY, timeStamp);\n            }\n        }\n\n        pagehide(window).then(({startTime}) => done('pagehide', startTime));\n\n        /**\n         * @param {string} type \n         * @param {number} startTime \n         */\n        function done(type, startTime) {\n            resolve({\n                entryType,\n                type,\n                startTime\n            });\n        }\n    });\n}\n\n/**\n * @param {Window} window \n * @returns {boolean}\n */\nexport function isHidden({document}) {\n    const {visibilityState} = document;\n    return typeof visibilityState === 'undefined' ? document.hidden : visibilityState === 'hidden';\n}\n","//@ts-check\nimport {isUndefined, isBoolean, isNumber} from './utils.js';\nimport getWixBiSession from './wixBiSession.js';\n\nconst config = {\n    __proto__: {\n        load\n    },\n\n    newClsMethod: true,\n\n    resourceDebounce: 2000,\n    taskDelta: 300,\n    longTask: 60,\n    eventDelta: 500,\n    ttiDurationInc: 2000,\n\n    ignoreResources: 'cdn_detect,-analytics,perf-measure',\n\n    label: makeLabel('Performance'),\n    clientType: '',\n    fcpPolyfill: 'wixFirstPaint',\n    fcpPolyfillId: 'wix-first-paint',\n    pageEvent: makeLabel('Page'),\n    clsEvent: makeLabel('Cls'),\n\n    storagePrefix: 'wix-perf-measure',\n\n    sessionDelta: false,\n\n    noMeasure: false,\n    log: false\n};\n\nfunction makeLabel(id) {\n    return `wix${id}Measurements`;\n}\n\n/**\n * Load configuration from script tag dataSet\n * @param {Window} window\n * @param {DOMStringMap} dataset \n */\nfunction load(window, {dataset, src}) {\n    Object.entries(config)\n        .map(([key, value]) => [dataset[key], key, value])\n        .filter(([data]) => !isUndefined(data))\n        .forEach(([data, key, value]) => {\n            if (isBoolean(value)) {\n                data = true;\n            } else if (isNumber(value)) {\n                const n = Number(data);\n                data = Number.isNaN(n) ? value : n;\n            }\n            config[key] = data;\n        });\n\n    if (src) {\n        config.src = src;\n        const m = /\\d+\\.\\d+\\.\\d+/.exec(src);\n        if (m) {\n            config.version = m[0];\n        }\n    }\n\n    if (!config.clientType && getWixBiSession(window)) {\n        config.clientType = 'ugc';\n    }\n}\n\nexport default config;\n","//@ts-check\nimport {excludeSearch} from './utils.js';\n\nconst ESSENTIAL_FIELDS = {\n    analytics: true,\n    entryType: true,\n    clientType: true,\n    version: true,\n    cores: true,\n    memory: true,\n    effectiveType: true,\n    rtt: true,\n    download: true,\n    saveData: true,\n    url: true,\n    dns: true,\n    tcp: true,\n    ssl: true,\n    ttfb: true,\n    redirect: true,\n    fetchStart: true,\n    response: true,\n    navigationType: true,\n    protocol: true,\n    pageCaching: true,\n    _brandId: true,\n    viewerName: true,\n    v: true,\n    dc: true,\n    microPop: true,\n    cdn: true,\n    msid: true,\n    pageId: true,\n    fp: true,\n    fcp: true,\n    tti: true,\n    tbt: true,\n    lcp: true,\n    lcpSize: true,\n    closestId: true,\n    lcpTag: true,\n    lcpResourceType: true,\n    lcpContentType: true,\n    lcpFontClass: true,\n    lcpInLightbox: true,\n    cls: true,\n    countCls: true,\n    clsId: true,\n    clsTag: true,\n    clsOld: true,\n    ttlb: true,\n    dcl: true,\n    transferSize: true,\n    decodedBodySize: true,\n    isSsr: true,\n    ssrDuration: true,\n    ssrTimestamp: true,\n    startTime: true,\n    duration: true,\n    delay: true,\n    action: true,\n    type: true,\n    pn: true,\n    count: true,\n    simLH6: true,\n    isMobile: true,\n    maybeBot: true,\n    btype: true,\n    worstLatencyOverBudget: true,\n    totalLatencyOverBudget: true,\n    numOfResponsivenessEvents: true,\n    worstLatency: true,\n};\n\n/**\n * Apply consent policy restrictions\n * @param {Object} window\n * @param {Object} measurement \n */\nexport function applyConsent(window, measurement) {\n    if (Symbol.iterator in measurement) {\n        return measurement;\n    }\n    \n    measurement.analytics = analyticsAllowed(window);\n    if (measurement.analytics) {\n        return measurement;\n    }\n\n    return Object.entries(measurement)\n        .filter(([key]) => ESSENTIAL_FIELDS[key])\n        .reduce((acc, [key, value]) => {\n            acc[key] = value;\n            return acc;\n        }, {});\n}\n\n/**\n * Shorten URL to imporant part\n * @param {string} url \n * @param {Object} window\n */\nexport function fixURL(url, window) {\n    const e = /^https?:\\/\\/(?:www\\.)?(.*)/.exec(url);\n    const short = e ? e[1] : url;\n    return analyticsAllowed(window) ? short : excludeSearch(short);\n}\n\nexport function analyticsAllowed({consentPolicyManager}) {\n    return !!consentPolicyManager?.getCurrentConsentPolicy()?.policy?.analytics;\n}\n","//@ts-check\nimport {getFirstEntryByType, isNumber} from '../utils/utils.js';\nimport {fixURL} from '../utils/consent.js';\n\nconst entryType = 'navigation-start';\n\nconst RETRY = {\n    COUNT: 10,\n    DELAY: 100\n};\n\n/**\n * @param {import('../utils/utils.js').State} state\n */\nexport default function navStart([window, performance]) {\n    return new Promise((resolve, reject) => {\n        let count = 0;\n        _resolve();\n        \n        function _resolve() {\n            const {navigationStart, fetchStart, domainLookupStart, domainLookupEnd, redirectStart, redirectEnd, connectStart, connectEnd, secureConnectionStart, requestStart, responseStart} = performance.timing;\n            const ttfb = responseStart - navigationStart;\n            if (!(ttfb >= 0)) {\n                if (++count > RETRY.COUNT) {\n                    reject(entryType);\n                } else {\n                    setTimeout(_resolve, RETRY.DELAY);\n                }\n                return;\n            }\n\n            const {document: {referrer}, location: {href}} = window;\n            const navigation = /** @type {PerformanceNavigationTiming} */(getFirstEntryByType(performance, 'navigation'));\n            resolve({\n                entryType,\n                url: fixURL(href, window),\n                referrer: fixURL(referrer, window),\n                ...navigation && {navigationType: navigation.type, protocol: navigation.nextHopProtocol},\n                dns: domainLookupEnd - domainLookupStart,\n                ...isNumber(fetchStart) && {fetchStart: fetchStart - navigationStart},\n                ...redirectEnd && {redirect: redirectEnd - redirectStart},\n                ...secureConnectionStart ? {\n                    tcp: secureConnectionStart - connectStart,\n                    ssl: connectEnd - secureConnectionStart\n                } : {\n                    tcp: connectEnd - connectStart\n                },\n                ttfb,\n                response: responseStart - requestStart\n            });\n        }\n    });\n}\n","//@ts-check\nimport {load} from '../utils/windowEvents.js';\nimport {isNumber, getFirstEntryByType} from '../utils/utils.js';\n\nconst entryType = 'navigation-finish';\n\nconst CACHE_LIMIT_MS = 13;\nconst CDN_LIMIT_MS = 333;\n\nconst BROWSER = 'browser';\nconst ETAG = 'eTag';\nconst MAYBE = 'maybe';\n\n/**\n * \n * @param {import('../utils/utils.js').State} state\n */\nexport default function navFinish([, performance]) {\n    return load(window).then(() => {\n        const {timing} = performance;\n        const {navigationStart, domContentLoadedEventEnd, loadEventEnd} = timing;\n        let {responseEnd} = timing;\n        if (!(responseEnd >= navigationStart)) {\n            responseEnd = timing.domInteractive || timing.domContentLoadedEventStart;\n        }\n        const navigation = /** @type {PerformanceNavigationTiming} */(getFirstEntryByType(performance, 'navigation'));\n        const pageCaching = determineCaching(navigation);\n        const result = {\n            entryType,\n            duration: loadEventEnd - navigationStart,\n            ttlb: responseEnd - navigationStart,\n            dcl: domContentLoadedEventEnd - navigationStart,\n            ...navigation && {\n                transferSize: navigation.transferSize, \n                decodedBodySize: navigation.decodedBodySize\n            },\n            ...pageCaching && {pageCaching}\n        };\n        return result;\n    });\n}\n\nfunction determineCaching(navigation) {\n    if (navigation) {\n        const {requestStart, responseStart, responseEnd, transferSize, encodedBodySize} = navigation;\n        if (isNumber(transferSize)) {\n            if (transferSize === 0) {\n                return BROWSER;\n            }\n            if (transferSize < encodedBodySize) {\n                return ETAG;\n            }\n        } else {\n            if (responseStart - requestStart < CACHE_LIMIT_MS) {\n                return BROWSER;\n            }\n            if (responseEnd - responseStart < CACHE_LIMIT_MS) {\n                return `${MAYBE} ${ETAG}`;\n            }\n        }\n        if (responseEnd - responseStart < CDN_LIMIT_MS) {\n            return `${MAYBE} CDN`;\n        }\n    }\n}\n","import {analyticsAllowed} from './consent.js';\nimport config from './config.js';\n\n/**\n * Get value from localStorage if consent allows, remove it otherwise\n * @param {Window} window \n * @param {string} key \n */\nexport function get(window, key) {\n    return storageOp(window, key, (localStorage, k) => localStorage.getItem(k));\n}\n\n/**\n * Set value to localStorage if consent allows, remove it otherwise\n * @param {Window} window \n * @param {string} key \n * @param {*} value \n */\nexport function set(window, key, value) {\n    storageOp(window, key, (localStorage, k) => localStorage.setItem(k, value));\n}\n\n/**\n * Remove value from localStorage\n * @param {Window} window \n * @param {string} key \n */\nexport function remove(window, key) {\n    storageOp(window, key);\n}\n\nfunction storageOp(window, key, cb) {\n    key = `${config.storagePrefix}-${key}`;\n    try {\n        const {localStorage} = window;\n        if (cb && analyticsAllowed(window)) {\n            return cb(localStorage, key);\n        }\n        localStorage.removeItem(key);\n    } catch (e) {\n        // empty\n    }\n}\n","//@ts-check\nimport config from '../utils/config.js';\nimport {addField, allFulfilled} from '../utils/utils.js';\nimport {dcl, addEventListener} from '../utils/windowEvents.js';\nimport getWixBiSession from '../utils/wixBiSession.js';\nimport * as storage from '../utils/storage.js';\n\nconst entryType = 'wix-finish';\n\nconst FIELDS = [\n    'microPop',\n    'is_rollout',\n    'is_platform_loaded',\n    'maybeBot',\n    'isjp'\n];\nconst MAP_NAME = {\n    is_rollout: 'isRollout',\n    is_platform_loaded: 'isPlatformLoaded',\n    isjp: 'maybeBot'\n};\nconst TIMESTAMP = 'timestamp';\n\n/**\n * Final Wix session attributes\n * @param {import('../utils/utils.js').State} state\n * @param {Promise} interactive\n */\nexport default function wixFinish(state, interactive) {\n    const window = /** @type {Object} */(state[0]);\n    const model = window.fetchDynamicModel || Promise.resolve({});\n    return allFulfilled([model, interactive, dcl(window)]).then(([{visitorId}]) => {\n        const wixBiSession = getWixBiSession(window);\n        if (!wixBiSession) {\n            throw entryType;\n        }\n\n        const isSsr = !window.clientSideRender;\n        const {btype} = wixBiSession;\n        const commonConfig = window.commonConfig || window.viewerModel?.siteFeaturesConfigs.commonConfig;\n        const {bsi} = commonConfig;\n        const result = {\n            entryType,\n            isSsr,\n            isWelcome: !!window.requestCloseWelcomeScreen,\n            ...visitorId && {visitorId},\n            ...btype && {btype},\n            ...bsi && {bsi}\n        };\n\n        addField(result, 'pageId', window.rendererModel?.landingPageId || window.firstPageId);\n        if (isSsr) {\n            const {ssrInfo = {}} = window;\n            addField(result, 'ssrDuration', ssrInfo.renderBodyTime || ssrInfo.timeSpentInSSR);\n            addField(result, 'ssrTimestamp', ssrInfo.renderTimeStamp);\n        }\n\n        FIELDS.forEach(field => addField(result, MAP_NAME[field] || field, wixBiSession[field]));\n\n        addSessionDelta(result);\n\n        return result;\n    });\n\n    function addSessionDelta(result) {\n        if (!config.sessionDelta) {\n            storage.remove(window, TIMESTAMP);\n            return;\n        }\n\n        const prevSession = storage.get(window, TIMESTAMP);\n        const currSession = updateTimestamp();\n        const sessionDelta = currSession - prevSession;\n        if (sessionDelta > 0 && sessionDelta < currSession) {\n            result.sessionDelta = sessionDelta;\n        }\n        addEventListener(window.document, 'consentPolicyChanged', updateTimestamp, false);\n    }\n\n    function updateTimestamp() {\n        const timestamp = Date.now();\n        storage.set(window, TIMESTAMP, timestamp);\n        return timestamp;\n    }\n}\n","//@ts-check\nimport {noop} from './utils.js';\n\n/**\n * @callback ObserverCallback\n * @param {PerformanceEntryList} list\n * @param {PerformanceObserver} [observer]\n */\n\n/**\n * Wrapper for PerformanceObserver\n * @param {import('../utils/utils.js').PerformanceObserverType} PerformanceObserver \n * @param {string} type \n * @param {ObserverCallback} [cb = noop] \n * @param {boolean} [buffered = true]\n * @param {object} [more]\n * @returns {PerformanceObserver|undefined}\n */\nexport default function observe(PerformanceObserver, type, cb = noop, buffered = true, more) {\n    if (!PerformanceObserver) {\n        return;\n    }\n\n    const {supportedEntryTypes} = /** @type {object} */(PerformanceObserver);\n    if (!supportedEntryTypes || !supportedEntryTypes.includes(type)) {\n        return;\n    }\n\n    const observer = new PerformanceObserver((list, observer) => cb(list.getEntries(), observer));\n    try {\n        observer.observe({\n            type,\n            buffered,\n            ...more\n        });\n    } catch (e) {\n        observer.observe({\n            entryTypes: [type]\n        });\n    }\n    return observer;\n}\n","//@ts-check\nimport config from './config.js';\nimport observe from './observe.js';\nimport {handleFinish, disconnectHandler} from './utils.js';\n\n/** @typedef {(entry: PerformanceResourceTiming) => boolean} PerformanceEntryFilter */\n\n/** @type {PerformanceEntryFilter} */\nexport const isScript = ({initiatorType, name}) => initiatorType === 'script' || (initiatorType === 'link' && /\\.js$/.test(name));\n/** @type {PerformanceEntryFilter} */\nexport const isAjax = ({initiatorType}) => initiatorType === 'fetch' || initiatorType === 'xmlhttprequest';\n/** @type {PerformanceEntryFilter} */\nexport const isImage = ({initiatorType, name}) => initiatorType === 'img' || initiatorType === 'image' || initiatorType === 'css' && /\\.(?:jpe?g|png|webp|gif)/i.test(name);\n/** @type {PerformanceEntryFilter} */\nexport const isFont = ({initiatorType, name}) => (initiatorType === 'css' && name.includes('font')) || /\\.(?:woff2?|ttf|eot)/i.test(name);\n\n/**\n * @callback ObserveResourcesCallback\n * @param {PerformanceResourceTiming[]} entries\n * @returns {void}\n */\n\n/**\n * @type {PerformanceObserver}\n */\nlet observer;\n/**\n * @type {ObserveResourcesCallback[]}\n */\nconst cbs = [];\n\n/**\n * Report resource as they are downloaded\n * @param {import('../utils/utils.js').PerformanceObserverType} PerformanceObserver \n * @param {ObserveResourcesCallback} cb \n * @param {boolean} buffered\n */\nexport default function observeResources(PerformanceObserver, cb, buffered) {\n    if (cbs.push(cb) === 1) {\n        const ignores = config.ignoreResources.split(',');\n        observer = observe(PerformanceObserver, 'resource', entries => {\n            entries = entries.filter(({name}) => !ignores.some(ignore => name.includes(ignore)));\n            if (entries.length) {\n                cbs.forEach(cb => cb(/** @type {PerformanceResourceTiming[]} */(entries)));\n            }\n        }, buffered);\n    }\n    return {\n        observer,\n        finish: handleFinish(cbs, cb, disconnectHandler(observer))\n    };\n}\n","//@ts-check\nimport config from './config.js';\nimport observeResources from './observeResources.js';\nimport {isNumber} from './utils.js';\n\nconst LARGE_TIME = 1000000;\n\nconst {min, max} = Math;\n\n/**\n * \n * @param {import('./utils.js').State} state\n * @param {string} entryType\n * @param {Object} [options]\n * @param {import('./observeResources.js').PerformanceEntryFilter} [options.filter]\n * @param {boolean} [options.tag = true]\n * @param {number} [options.debounce]\n */\nexport default function collectResources([, , PerformanceObserver, setTimeout, clearTimeout], entryType,\n    {filter, tag = true, debounce = config.resourceDebounce} = {}) {\n\n    const promise = new Promise((resolve, reject) => {\n        const resources = [];\n\n        let timer = setTimeout(done, debounce);\n        const {observer, finish} = observeResources(PerformanceObserver, entries => {\n            if (filter) {\n                entries = entries.filter(filter);\n            }\n            if (entries.length) {\n                resources.push(...entries);\n                clearTimeout(timer);\n                timer = setTimeout(done, debounce);\n            }\n        }, true);\n\n        function done() {\n            if (!observer) {\n                return reject();\n            }\n\n            const extra = observer.takeRecords?.();\n            if (extra) {\n                resources.push(...extra);\n            }\n            finish();\n            resolve(resources);\n        }\n    }).then(r => {\n        const resources = /** @type {PerformanceResourceTiming[]} */(r);\n\n        const count = resources.length;\n        if (!count) {\n            throw entryType;\n        }\n\n        const {tbd, firstResponse, lastResponse} = resources.reduce((acc, {transferSize, responseStart, responseEnd}) => ({\n            tbd: acc.tbd + transferSize,\n            firstResponse: responseStart > 0 && responseStart < acc.firstResponse ? responseStart : acc.firstResponse,\n            lastResponse: max(acc.lastResponse, responseEnd)\n        }), {\n            tbd: 0,\n            firstResponse: LARGE_TIME,\n            lastResponse: 0\n        });\n\n        const ttfbs = resources\n            .filter(({requestStart}) => isNumber(requestStart))\n            .map(({requestStart, responseStart}) => responseStart - requestStart)\n            .sort();\n        const {length} = ttfbs;\n        const half = length >> 1;\n\n        const startTime = min(firstResponse, lastResponse);\n        const result = {\n            count,\n            startTime,\n            duration: lastResponse - startTime,\n            mttfb: length % 2 ? ttfbs[half] : (ttfbs[half - 1] + ttfbs[half]) / 2,\n            attfb: ttfbs.reduce((acc, ttfb) => acc + ttfb, 0) / length\n        };\n        if (!Number.isNaN(tbd)) {\n            result.tbd = tbd;\n        }\n        return result;\n    }).catch(() => ({\n        count: 0\n    }));\n\n    return tag ? promise.then(tagToAvoidConflicts) : promise;\n\n    function tagToAvoidConflicts(result) {\n        const tagLabel = capitalize(entryType);\n        return Object.entries(result).reduce((acc, [key, value]) => {\n            acc[key + tagLabel] = value;\n            return acc;\n        }, {});\n    }\n    \n    function capitalize(s) {\n        return s[0].toUpperCase() + s.slice(1);\n    }\n}\n","//@ts-check\nimport observe from './observe.js';\n\n/**\n * @callback promisifiedObserverCallback\n * @param {PerformanceEntryList} entries \n * @param {(r:*) => void} finish - and report\n * @returns {void}\n */\n\n/**\n * @typedef {Promise & {takeRecords: () => (PerformanceEntryList | undefined)}} promisifiedObserver\n */\n\n/**\n * Wrap PerformanceObserver in a promise\n * @param {import('../utils/utils.js').PerformanceObserverType} PerformanceObserver \n * @param {string} entryType \n * @param {promisifiedObserverCallback} cb \n * @param {boolean} [buffered]\n */\nexport default function promisifyObserver(PerformanceObserver, entryType, cb, buffered) {\n    let observer;\n    const promise = /** @type {promisifiedObserver} */(new Promise((resolve, reject) => {\n        observer = observe(\n            PerformanceObserver, \n            entryType, \n            entries => cb(\n                entries, \n                result => {\n                    observer.disconnect();\n                    resolve(result);\n                }\n            ), \n            buffered\n        );\n        if (!observer) {\n            reject(entryType);\n        }\n    }));\n    promise.takeRecords = () => observer?.takeRecords?.();\n    return promise;\n}\n","//@ts-check\nimport promisifyObserver from '../utils/promisifyObserver.js';\nimport fcpPolyfill from '../polyfills/fcp.js';\n\nconst entryType = 'paint';\n\nconst FCP = 'fcp';\n\nconst MAP_NAME = {\n    'first-paint': 'fp',\n    'first-contentful-paint': FCP\n};\n\n/**\n * Get FCP\n * @param {import('../utils/utils.js').State} state\n */\nexport default function fcp([window, , PerformanceObserver]) {\n    const paints = {\n        entryType: `initial-${entryType}`\n    };\n    return promisifyObserver(PerformanceObserver, entryType, (entries, resolve) => {\n        const done = entries\n            .reduce((acc, {name, startTime}) => {\n                name = MAP_NAME[name] || name;\n                paints[name] = startTime;\n                return acc || name === FCP;\n            }, false);\n        if (done) {\n            resolve(paints);\n        }\n    }).catch(() => fcpPolyfill(window, paints.entryType));\n}\n","//@ts-check\nimport {addEventListener, dcl} from '../utils/windowEvents.js';\nimport config from '../utils/config.js';\n\n/**\n * Get FCP polyfill\n * @param {Window} window \n * @param {string} entryType \n */\nexport default function fcpPolyfill(window, entryType) {\n    return new Promise((resolve, reject) => {\n        // Use polyfill\n        const {fcpPolyfill, fcpPolyfillId} = config;\n        if (fcpPolyfill in window) {\n            resolvePaint();\n        } else {\n            addEventListener(window, fcpPolyfill, resolvePaint);\n            dcl(window).then(() => {\n                if (!window.document.getElementById(fcpPolyfillId)) {\n                    reject(entryType);\n                }\n            });\n        }\n\n        function resolvePaint() {\n            const when = window[fcpPolyfill];\n            resolve({\n                entryType,\n                fp: when,\n                fcp: when\n            });\n        }\n    });\n}\n","//@ts-check\nimport config from '../utils/config.js';\nimport observeResources, {isScript, isAjax} from '../utils/observeResources.js';\nimport {noop, rejector} from '../utils/utils.js';\nimport {dcl} from '../utils/windowEvents.js';\nimport longtasks from '../polyfills/longtasks.js';\n\nconst entryType = 'interactive';\nconst {max, min} = Math;\n\n/**\n * Get TTI and TBT attributes\n * @param {import('../utils/utils.js').State} state \n * @param {Promise<number>} start\n * @param {Promise<{startTime: number, delay: number}>} [interaction]\n */\nexport default function tti_tbt(state, start, interaction) {\n    const [window, , PerformanceObserver, setTimeout, clearTimeout] = state;\n    const {resourceDebounce, taskDelta, ttiDurationInc} = config;\n\n    return start\n        .then(start => new Promise(resolve => {\n            let finished = start;\n\n            let ltDone = true;\n            let ltTimer = 0;\n            const lts = [];\n            const ltStop = longtasks(state, entries => {\n                lts.push(...entries);\n                ltDone = false;\n                clearTimeout(ltTimer);\n                ltTimer = setTimeout(() => {\n                    ltDone = true;\n                    checkDone();\n                }, taskDelta);\n            });\n\n            const dclPromise = dcl(window);\n            let resourceDone = false;\n            let resourceTimer = setTimeout(checkResourceDone, resourceDebounce);\n            const {finish: resourceStop} = observeResources(PerformanceObserver, rs => {\n                rs = rs.filter(r => isAjax(r) || isScript(r));\n                if (rs.length) {\n                    resourceDone = false;\n                    finished = rs.reduce((acc, {startTime, duration}) => max(acc, startTime + duration), finished);\n                    // TTI cannot happen before DCL otherwise SSR failures will get great TTI scores which is wrong\n                    dclPromise.then(({startTime}) => {\n                        finished = max(startTime, finished);\n                        clearTimeout(resourceTimer);\n                        resourceTimer = setTimeout(checkResourceDone, resourceDebounce);\n                    });\n                }\n            }, false);\n\n            interaction?.then(({startTime, delay}) => done(startTime + delay), noop);\n\n            function checkResourceDone() {\n                resourceDone = true;\n                checkDone();\n            }\n\n            function checkDone() {\n                if (ltDone && resourceDone) {\n                    done(1000000);\n                }\n            }\n            function done(interactionEnd) {\n                ltStop();\n                resourceStop();\n                resolve([\n                    lts,\n                    start,\n                    finished,\n                    interactionEnd\n                ]);\n            }\n        }))\n        .then(([lts, start, finished, interactionEnd]) => {\n            const tti = calc_tti(lts, start, finished, interactionEnd);\n            const {document, innerHeight} = window;\n            const tbt = calc_tbt(lts, tti);\n            const result = {\n                tti,\n                tbt,\n                iframes: /** @type {Document} */(document).querySelectorAll('iframe').length\n            };\n            const pageHeight = max(document.body.offsetHeight, innerHeight);\n            if (pageHeight > 0) {\n                result.screens = document.body.scrollHeight / pageHeight;\n            }\n            return result;\n        })\n        .catch(rejector(entryType));\n\n    function calc_tti(lts, start, finished, interactionEnd) {\n        if (start === finished) {\n            finished += ttiDurationInc;\n        }\n        let tail = lts.findIndex(({startTime, duration}) => {\n            if (startTime > finished + taskDelta) {\n                return true;\n            }\n            finished = max(finished, startTime + duration);\n        });\n        if (tail === -1) {\n            tail = lts.length;\n        }\n        const found = tail > 0 ? (llt => llt.startTime + llt.duration)(lts[tail - 1]) : 0;\n        return max(min(found, interactionEnd), start);\n    }\n        \n    function calc_tbt(lts, tti) {\n        let tbt = 0;\n        for (let i = 0; i < lts.length; ++i) {\n            const {startTime, duration} = lts[i];\n            if (startTime > tti) {\n                break;\n            }\n            tbt += max(duration - 50, 0);\n        }\n        return tbt;\n    }\n}\n","//@ts-check\nimport observe from '../utils/observe.js';\nimport config from '../utils/config.js';\nimport {disconnectHandler} from '../utils/utils.js';\n\n/**\n * Resolve longtask polyfill attribues\n * @param {import('../utils/utils.js').State} state\n * @param {(entries: Array<{startTime: number, duration: number}>) => void} cb\n */\nexport default function longtasks([{requestAnimationFrame, cancelAnimationFrame}, performance, PerformanceObserver], cb) {\n    const observer = observe(PerformanceObserver, 'longtask', cb, false); // false because buffered not fully supported yet for longtask\n    if (observer) {\n        return disconnectHandler(observer);\n    }\n\n    // Use polyfill\n    let startTime = performance.now();\n    const {longTask} = config;\n    let id = requestAnimationFrame(getTaskDuration);\n    return () => cancelAnimationFrame(id);\n\n    function getTaskDuration(now) {\n        const duration = now - startTime;\n        if (duration >= longTask) {\n            cb([{startTime, duration}]);\n        }\n        startTime = now;\n        id = requestAnimationFrame(getTaskDuration);\n    }\n}\n","//@ts-check\nimport config from '../utils/config.js';\nimport {rejector, closestId, closestContainer, closestSelector, noop} from '../utils/utils.js';\nimport promisifyObserver from '../utils/promisifyObserver.js';\n\nexport const entryType = 'largest-contentful-paint';\n\n/**\n * Get LCP attributes\n * @param {import('../utils/utils.js').State} state\n * @param {Promise} interactive\n * @param {Promise} visibility\n * @param {Promise} interaction\n */\nexport default function lcp([, performance, PerformanceObserver, setTimeout, clearTimeout], interactive, visibility, interaction) {\n    return interactive.then(({tti}) => {\n        const {resourceDebounce} = config;\n    \n        let timer;\n        const timeout = new Promise(resolve => {\n            const delay = Math.max(resourceDebounce - (performance.now() - tti), 0);\n            timer = setTimeout(resolve, delay);\n        });\n    \n        const lcpPromise = promisifyObserver(\n            PerformanceObserver,\n            entryType, \n            (entries, resolve) => {\n                clearTimeout(timer);\n                timer = setTimeout(() => resolve(entries[entries.length - 1]), resourceDebounce);\n            }\n        );\n    \n        return Promise.race([lcpPromise, timeout, visibility.then(noop), interaction.then(noop)])\n            .then(lcpFound => {\n                const records = lcpPromise.takeRecords?.();\n                const [lcpFoundMore] = records?.slice(-1);\n                return lcpResult(lcpFoundMore || lcpFound);\n            })\n            .catch(rejector(entryType));\n    });\n}\n\n/**\n * @typedef {Object} LargestContentfulPaintType\n * @property {number} startTime\n * @property {number} size\n * @property {string} url\n * @property {string} id\n * @property {Element} [element]\n * \n * @typedef {LargestContentfulPaintType & PerformanceEntry} LargestContentfulPaint\n */\n\n/**\n * Calculate LCP result from measurement\n * @param {LargestContentfulPaint} lcp\n * @param {string | void} lcpContentType\n */\nexport function lcpResultValue(lcp, lcpContentType) {\n    const {startTime, size, url, element, id} = lcp;\n    const container = closestContainer(element);\n    const lcpTag = container?.tagName;\n    const lcpFontClass = getFontClass(container);\n    const cid = closestId(element, id);\n    const m = /\\.(jpe?g|png|gif|svg|webp)/i.exec(url);\n    const lcpResourceType = m?.[1]?.toLowerCase().replace('jpeg', 'jpg') || 'other';\n\n    return {\n        entryType,\n        lcp: startTime,\n        lcpSize: size,\n        ...cid && {closestId: cid},\n        ...lcpTag && {lcpTag},\n        ...url && {lcpResourceType},\n        ...lcpContentType && {lcpContentType},\n        ...lcpFontClass && {lcpFontClass},\n        lcpInLightbox: inLightbox(element)\n    };\n} \n\n/**\n * Calculate LCP result from measurement\n * @param {LargestContentfulPaint} [lcp]\n */\nexport function lcpResult(lcp) {\n    if (!lcp) {\n        return Promise.reject(entryType);\n    }\n\n    const {url} = lcp;\n    const ctPromise = url ?\n        fetch(url, {method: 'HEAD'}).then(response => response.headers.get('content-type')).catch(noop) : \n        Promise.resolve();\n    return ctPromise.then(lcpContentType => lcpResultValue(lcp, lcpContentType));\n}\n\nfunction getFontClass(element) {\n    if (element) {\n        for (const cls of element.classList) {\n            const m = /^font_\\d$/.exec(cls);\n            if (m) {\n                return m[0];\n            }\n        }\n    }\n}\n\nfunction inLightbox(element) {\n    return closestSelector(element, '#POPUPS_ROOT') !== null;\n}\n","//@ts-check\nimport takeRecords from '../utils/takeRecords.js';\nimport {CLS_FACTOR} from '../utils/constants.js';\nimport {closestId, closestContainer} from '../utils/utils.js';\nimport config from '../utils/config.js';\n\nconst entryType = 'layout-shift';\n\n/**\n * @typedef {Object} LayoutShiftAttribution\n * @property {Node} [node]\n * @property {DOMRectReadOnly} currentRect;\n * \n * @typedef {Object} LayoutShiftType\n * @property {number} startTime\n * @property {number} value\n * @property {boolean} hadRecentInput;\n * @property {Array<LayoutShiftAttribution>} sources\n * \n * @typedef {LayoutShiftType & PerformanceEntry} LayoutShift\n * \n * @typedef {Object} LayoutShiftResult\n * @property {number} cls\n * @property {number} countCls\n * @property {string} [clsId]\n * @property {string} [clsTag]\n * @property {Element} [element]\n */\n\nconst WINDOW = {\n    MAX_SIZE: 200,\n    MAX_INTERVAL: 100\n};\nconst NO_WINDOW = {\n    MAX_SIZE: 10_000_000,\n    MAX_INTERVAL: 10_000_000\n};\n\n/**\n * Get CLS attributes\n * @param {import('../utils/utils.js').State} state\n * @param {boolean} [shouldGetElement]\n * @returns {LayoutShiftResult}\n */\nexport default function cls([, , PerformanceObserver], shouldGetElement) {\n    const entries = takeRecords(PerformanceObserver, entryType);\n    if (!entries) {\n        return;\n    }\n\n    const window = config.newClsMethod ? WINDOW : NO_WINDOW;\n    \n    let clsOld = 0;\n    const [cls, countCls, map] = /** @type {Array<LayoutShift>} */(entries)\n        .filter(({hadRecentInput}) => !hadRecentInput)\n        .map(({sources = [], value, startTime}) => {\n            clsOld += value;\n            const [node] = sources.reduce((acc, {node, currentRect: {width, height}}) => {\n                const area = width * height;\n                return area < acc[1] ? acc : [node, area];\n            }, [null, -1]);\n            return [\n                value,\n                node,\n                startTime\n            ];\n        })\n        .reduce((acc, entry) => {\n            const [current] = acc.slice(-1);\n            if (current) {\n                const [,,startTime] = entry;\n                const [first] = current;\n                if (startTime - first[2] < window.MAX_SIZE) {\n                    const [last] = current.slice(-1);\n                    if (startTime - last[2] < window.MAX_INTERVAL) {\n                        current.push(entry);\n                        return acc;\n                    }\n                }\n            }\n            acc.push([entry]);\n            return acc;\n        }, [])\n        .reduce((acc, sequence) => {\n            const value = sequence.reduce((acc, [value]) => acc + value, 0);\n            if (value <= acc[0]) {\n                return acc;\n            }\n            const map = sequence\n                .filter(([, node]) => node)\n                .reduce((acc, [value, node]) => {\n                    acc.set(node, value + (acc.get(node) || 0));\n                    return acc;\n                }, new Map());\n            return [\n                value,\n                sequence.length,\n                map\n            ];\n        }, [0, 0]);\n\n    const result = {\n        cls: cls * CLS_FACTOR,\n        countCls,\n        clsOld: clsOld * CLS_FACTOR\n    };\n\n    if (map) {\n        const nodes = [];\n        for (const entry of map.entries()) {\n            nodes.push(entry);\n        }\n        if (nodes.length) {\n            nodes.sort((a, b) => b[1] - a[1]);\n\n            let node = /** @type {Element} */(nodes[0][0]);\n            if (node?.nodeType !== Node.ELEMENT_NODE) {\n                node = node.parentElement;\n            }\n            if (shouldGetElement && node) {\n                result.element = closestContainer(node);\n            }\n            const cid = closestId(node);\n            if (cid) {\n                result.clsId = cid;\n            }\n            const {tagName} = node;\n            if (tagName) {\n                result.clsTag = tagName;\n            }\n        }\n    }\n\n    return result;\n}\n","//@ts-check\nimport observe from './observe.js';\n\n/**\n * Helper for taking records from PerformanceObserver\n * @param {any} PerformanceObserver \n * @param {string} type \n */\nexport default function takeRecords(PerformanceObserver, type) {\n    const observer = observe(PerformanceObserver, type);\n    if (observer) {\n        const result = observer.takeRecords?.();\n        observer.disconnect();\n        return result;\n    }\n}\n","//@ts-check\nimport {addEventListener, removeEventListener} from './windowEvents.js';\nimport config from './config.js';\n\nconst EVENT_TYPES = [\n    'pointerdown',\n    'click',\n    'mousedown',\n    'keydown',\n    'touchstart'\n];\n\n/**\n * @callback interactionCallback\n * @param {string} action \n * @param {number} startTime \n * @param {number} delay \n * @returns {void}\n */\n\n/**\n * Register for user interactions\n * @param {import('./utils.js').State} state\n * @param {interactionCallback} cb \n * @param {Array<string>} [event_types]\n */\nexport default function interaction([window, performance], cb, event_types = EVENT_TYPES) {\n    let prev = 0;\n\n    event_types.forEach(eventType => addEventListener(window, eventType, onInput, false));\n    return () => {\n        event_types.forEach(eventType => removeEventListener(window, eventType, onInput, false));\n    };\n\n    /**\n     * @param {Event} event\n     */\n    function onInput({type, timeStamp, cancelable}) {\n        if (!cancelable) {\n            return;\n        }\n\n        const now = performance.now();\n        const end = timeStamp > 1e12 ? Date.now() : now;\n        const delay = Math.max(end - timeStamp, 0);\n        const startTime = now - delay;\n\n        if (type === EVENT_TYPES[0]) {\n            onPointerDown(type, startTime, delay);\n        } else {\n            notify(type, startTime, delay);\n        }\n    }\n\n    /**\n     * @param {string} action \n     * @param {number} startTime \n     * @param {number} delay \n     */\n    function onPointerDown(action, startTime, delay) {\n        addEventListener(window, 'pointerup', onPointerUp, false);\n        addEventListener(window, 'pointercancel', removePointerEventListeners, false);\n\n        function onPointerUp() {\n            notify(action, startTime, delay);\n            removePointerEventListeners();\n        }\n\n        function removePointerEventListeners() {\n            removeEventListener(window, 'pointerup', onPointerUp, false);\n            removeEventListener(window, 'pointercancel', removePointerEventListeners, false);\n        }\n    }\n\n    /**\n     * @param {string} action \n     * @param {number} startTime \n     * @param {number} delay \n     */\n    function notify(action, startTime, delay) {\n        const now = startTime + delay;\n        if (now - prev < config.eventDelta) {\n            return;\n        }\n        prev = now;\n\n        cb(action, startTime, delay);\n    }\n}\n","//@ts-check\nimport promisifyObserver from '../utils/promisifyObserver.js';\nimport {closestId} from '../utils/utils.js';\nimport fidPolyfill from '../polyfills/fid.js';\n\nconst entryType = 'first-input';\n\n/**\n * Resolve FID attribues\n * @param {import('../utils/utils.js').State} state\n */\nexport default function fid(state) {\n    const [, , PerformanceObserver, setTimeout] = state;\n    return promisifyObserver(PerformanceObserver, entryType, (entries, resolve) => {\n        const {name, startTime, processingStart, duration, target} = /** @type {any} */(entries[0]);\n        const result = {\n            entryType,\n            action: name,\n            startTime,\n            delay: processingStart - startTime,\n            duration\n        };\n        const cid = closestId(target);\n        if (cid) {\n            result.closestId = cid;\n        }\n        setTimeout(() => resolve(result), 0);\n    }).catch(() => fidPolyfill(state, entryType));\n}\n","//@ts-check\nimport interaction from '../utils/interaction.js';\n\n/**\n * Resolve FID polyfill attribues\n * @param {import('../utils/utils.js').State} state\n * @param {string} entryType\n */\nexport default function fidPolyfill(state, entryType) {\n    return new Promise(resolve => {\n        const finish = interaction(state, (action, startTime, delay) => {\n            finish();\n            resolve({\n                entryType,\n                action,\n                startTime,\n                delay\n            });\n        });\n    });\n}\n","import {round} from './utils.js';\nimport {fireEvent} from './windowEvents.js';\nimport {applyConsent} from './consent.js';\nimport config from './config.js';\n\n/**\n * Construct a value sequence, reported by both async iterator and a custom event\n * @param {Window} window \n * @param {string} entryType\n * @param {string} [eventName]\n */\nexport default function sequence(window, entryType, eventName) {\n    const promises = [];\n    const values = [];\n\n    let resolve;\n    const next = () => promises.push(new Promise(r => resolve = r));\n    next();\n\n    return {\n        report: value => {\n            value = prepareMeasurement(window, value);\n            values.push(value);\n            resolve({\n                value\n            });\n            next();\n            if (eventName) {\n                fireEvent(window, eventName, value);\n            }\n        },\n        result: Promise.resolve({\n            entryType,\n            [Symbol.iterator]() {\n                let index = 0;\n                return {\n                    next: () => ({\n                        value: values[index++],\n                        done: index > values.length\n                    })\n                };\n            },\n            [Symbol.asyncIterator]() {\n                let index = 0;\n                return {\n                    next: () => promises[index++]\n                };\n            },\n            ...eventName && {eventName},\n        })\n    };\n}\n\n/**\n * @template\n * @param {T} payload\n * @param {Window} window\n * @returns {Readonly<T>}\n */\nexport function prepareMeasurement(window, payload) {\n    return Object.freeze(round(applyConsent(window, {...payload, clientType: config.clientType})));\n}\n","//@ts-check\nimport {noop, label, allFulfilled} from '../utils/utils.js';\n\nconst TTI_LABEL = label('tti');\nconst LCP_LABEL = label('lcp');\n\n/**\n * Create marks and measures for performance metrics\n * @param {Performance} performance \n * @param {Promise<Readonly<{}>>[]} measurements \n */\nexport function markAndMeasure(performance, measurements) {\n    allFulfilled(measurements)\n        .then(values => {\n            const {tti, tbt, lcp} = find(values, 'loaded');\n            if (!mark(TTI_LABEL, tti, tbt)) {\n                performance.clearMarks(TTI_LABEL); // Don't show wrong mark/measure on limited browsers\n                return;\n            }\n            mark(LCP_LABEL, lcp);\n\n            const {fcp} = find(values, 'initial-paint');\n            const lcpFirst = lcp < tti;\n            const lcpDuration = {\n                start: lcpFirst ? fcp: tti,\n                end: lcp\n            };\n            const ttiDuration = {\n                start: lcpFirst ? lcp : fcp,\n                end: tti,\n                detail: tbt\n            };\n            measure(performance, LCP_LABEL, lcpDuration);\n            measure(performance, TTI_LABEL, ttiDuration);\n        }, noop);\n\n    /**\n     * @param {{entryType: string}[]} values \n     * @param {string} et \n     * @returns {{fcp: number, tti: number, tbt: number, lcp: number}}\n     */\n    function find(values, et) {\n        return /** @type {Object} */(values.find(({entryType}) => entryType === et) || {});\n    }\n\n    /**\n     * @param {string} label \n     * @param {number} startTime \n     * @param {any} detail \n     */\n    function mark(label, startTime, detail) {\n        if (startTime) {\n            return /** @type {(string, Object) => Object} */(performance.mark)(label, {\n                startTime,\n                detail\n            });\n        }\n    }\n}\n\n/**\n * Create measure for page metrics\n * @param {Performance} performance\n * @param {{pn: number, startTime: number, tti: number, tbt: number}} page \n */\nexport function measurePage(performance, {pn, startTime, tti, tbt}) {\n    measure(performance, label(`page #${pn} tti`), {start: startTime, end: tti, detail: tbt});\n}\n\n/**\n * @param {Performance} performance\n * @param {string} label \n * @param {{start: number, end: number, detail?: any}} options\n */\nfunction measure(performance, label, options) {\n    if (options.end > options.start) {\n        performance.measure(label, options);\n    }\n}\n","//@ts-check\nimport interaction from '../utils/interaction.js';\nimport tti_tbt from './tti-tbt.js';\nimport {addEventListener} from '../utils/windowEvents.js';\nimport config from '../utils/config.js';\nimport {excludeSearch} from '../utils/utils.js';\nimport {fixURL} from '../utils/consent.js';\nimport sequence from '../utils/sequence.js';\nimport {measurePage} from '../actions/markAndMeasure';\nimport observe from '../utils/observe.js';\n\nconst subEntryType = 'page-transition';\nconst entryType = `${subEntryType}s`;\n\nlet pn = 0;\n\n/**\n * Get page transition duration\n * @param {import('../utils/utils.js').State} state\n */ \nexport default function pages(state) {\n    const [window, performance, PerformanceObserver] = state;\n    let origin = getCurrentURL();\n    const {clientType, pageEvent} = config;\n\n    const {report, result} = sequence(window, entryType, pageEvent);\n\n    addEventListener(window, 'popstate', ({type, timeStamp}) => _report(type, timeStamp, 0), false);\n    if (!observe(PerformanceObserver, 'event', eventTiming, false, {durationThreshold: 1})) {\n        interaction(state, _report, ['click']);\n    }\n\n    let measuring = false;\n    return result;\n\n    /**\n     * @param {PerformanceEntryList} entries \n     */\n    function eventTiming(entries) {\n        // Loop from end\n        entries.reduceRight((acc, entry) => {\n            const {name} = entry;\n            if (name === 'click' || name === 'keyup') {\n                _report(name, entry.startTime, entry.duration);\n            }\n            return acc;\n        }, undefined);\n    }\n\n    /**\n     * @param {string} action \n     * @param {number} startTime \n     * @param {number} delay \n     */\n    function _report(action, startTime, delay) {\n        if (measuring) {\n            return;\n        }\n        measuring = true;\n\n        tti_tbt(state, Promise.resolve(startTime + delay)).then(finish => {\n            measuring = false;\n            const destination = getCurrentURL();\n            if (urlChanged(origin, destination)) {\n                const duration = finish.tti - startTime;\n                const value = {\n                    entryType: subEntryType,\n                    clientType,\n                    origin,\n                    destination,\n                    action,\n                    startTime,\n                    delay,\n                    duration,\n                    pn: ++pn,\n                    ...finish\n                };\n                origin = destination;\n                report(value);\n                if (!config.noMeasure) {\n                    measurePage(performance, value);\n                }\n            }\n        });\n    }\n\n    function getCurrentURL() {\n        return fixURL(window.location.href, window);\n    }\n\n    function urlChanged(origin, destination) {\n        return excludeSearch(origin) !== excludeSearch(destination);\n    }\n}\n\nexport function getPn() {\n    return pn;\n}\n","//@ts-check\nimport observe from '../utils/observe.js';\nimport {getPn} from './pages.js';\nimport {entryType as lcpEntryType, lcpResult} from './lcp.js';\nimport cls from './cls.js';\n\nconst entryType = 'crux';\n\nlet cwvFuncs;\n\n/**\n * Compute LCP and CLS as close as possible to CrUX\n * @param {import('../utils/utils.js').State} state\n * @param {Promise<{startTime: number}>} visibility\n */\nexport default function crux(state, visibility) {\n    const [, , PerformanceObserver] = state;\n\n    let lcpFound;\n    let lcpPromise = Promise.resolve({});\n    function update(entries) {\n        if (entries?.length) {\n            ([lcpFound] = entries.slice(-1));\n            lcpPromise = lcpResult(/** @type {import('./lcp.js').LargestContentfulPaint} */(lcpFound));\n        }\n    }\n\n    const observer = observe(PerformanceObserver, lcpEntryType, update);\n\n    cwvFuncs = {\n        cls: () => cls(state, true),\n        lcp: () => {\n            update(observer.takeRecords?.());\n            return lcpFound;\n        }\n    };\n\n    return visibility.then(({startTime}) => {\n        return lcpPromise.then(lcpValue => {\n            const clsValue = cls(state);\n            return {\n                ...clsValue,\n                ...lcpValue,\n                entryType,\n                startTime,\n                pn: getPn()\n            };\n        });\n    });\n}\n\nexport function getCurrentLcp() {\n    return lcpResult(cwvFuncs?.lcp());\n}\n\n/**\n * @template T\n * @param {T} target\n * @returns {T}\n */\nexport function addGetters(target) {\n    /** @type {PropertyDescriptorMap} */\n    const map = {};\n    addProp('lcp');\n    addProp('cls');\n    return Object.defineProperties(target, map);\n\n    function addProp(prop) {\n        map[prop] = {\n            value: () => cwvFuncs?.[prop]()?.element\n        };\n    }\n}\n","import config from '../utils/config.js';\nimport {addEventListener} from '../utils/windowEvents.js';\nimport sequence from '../utils/sequence.js';\nimport cls from './cls.js';\nimport hidden, {isHidden} from './hidden.js';\n\nconst subEntryType = 'crux-cls';\nconst entryType = `${subEntryType}-s`;\n\n/**\n * Get page transition duration\n * @param {import('../utils/utils.js').State} state\n * @param {Promise} crux\n */ \nexport default function crux_cls(state, crux) {\n    return crux.then(({cls: prevCls}) => {\n        let count = 0;\n        const window = state[0];\n        const {report, result} = sequence(window, entryType, config.clsEvent);\n        addEventListener(window, 'visibilitychange', _report, false);\n        return result;\n    \n        function _report() {\n            if (!isHidden(window)) {\n                hidden(state).then(({startTime}) => {\n                    const result = cls(state);\n                    if (result && result.cls !== prevCls) {\n                        prevCls = result.cls;\n                        report({\n                            ...result,\n                            entryType: subEntryType,\n                            startTime,\n                            count: ++count\n                        });\n                    }\n                });\n            }\n        }\n    });\n}\n","//@ts-check\nimport {MARKER} from '../utils/constants.js';\nimport {noop, allFulfilled} from '../utils/utils.js';\n\n/**\n * Log measurements to console\n * @param {Promise[]} together \n * @param {Promise[]} individually \n */\nexport default function log(together, individually) {\n    allFulfilled(together).then(values => values.forEach(doLog), noop);\n    individually.forEach(measurement => measurement.then(doLog, noop));\n}\n\nexport function doLog(value) {\n    console.log(MARKER, value); // eslint-disable-line no-console\n}\n","import observe from '../utils/observe';\nimport sequence from '../utils/sequence';\nimport { doLog } from '../actions/log';\n\n\nconst RESPONSIVENESS = 'responsiveness';\n\nlet isInfoCalled = false;\nconst {report, result} = sequence(window, RESPONSIVENESS, RESPONSIVENESS);\nwindow.addEventListener('info-called', () => isInfoCalled = true);\n\n/**\n * PerformanceObserver callback for responsiveness (type \"event\")\n * @param {PerformanceEntryList} entries\n * @returns {void}\n */\nexport const measureResponsiveness = (isLogging) => {\n    const interactionMap = {};\n\n    let numOfResponsivenessEvents = 0;\n    let worstLatency = 0;\n    let worstLatencyOverBudget = 0;\n    let totalLatencyOverBudget = 0;\n\n    return (entries) => {\n        for (const entry of entries) {\n            // Ignore entries without an interaction ID.\n            if (entry.interactionId > 0) {\n            // Get the interaction for this entry, or create one if it doesn't exist.\n                let interaction = interactionMap[entry.interactionId];\n                if (!interaction) {\n                    interaction = {latency: 0, entries: []};\n                    interactionMap[entry.interactionId] = interaction;\n                }\n                interaction.entries.push(entry);\n\n                const latency = Math.max(entry.duration, interaction.latency);\n                worstLatency = Math.max(worstLatency, latency);\n\n                const budget = entry.name.includes('key') ? 50 : 100;\n                const latencyOverBudget = Math.max(latency - budget, 0);\n                worstLatencyOverBudget = Math.max(latencyOverBudget, worstLatencyOverBudget);\n\n                if (latencyOverBudget) {\n                    const oldLatencyOverBudget = Math.max(interaction.latency - budget, 0);\n                    totalLatencyOverBudget += latencyOverBudget - oldLatencyOverBudget;\n                }\n            \n                numOfResponsivenessEvents++;\n                interaction.latency = latency;\n                const currentResponsivenessMeasure = {\n                    entryType: RESPONSIVENESS,\n                    worstLatency,\n                    worstLatencyOverBudget,\n                    totalLatencyOverBudget,\n                    numOfResponsivenessEvents,\n                };\n\n                if (latencyOverBudget === worstLatencyOverBudget) {\n                    report(currentResponsivenessMeasure);\n                }\n\n            \n                if (isLogging || isInfoCalled) {\n                    doLog({\n                        ...currentResponsivenessMeasure, \n                        element: entry.target,\n                        eventName: entry.name,\n                    });\n                }\n            }\n        }\n    };\n};\n\n/**\n * @param {import('./utils/utils.js').State} state \n * @param {boolean} isLogging\n */\nexport const startMeasureResponsiveness = (isLoggingEnabled) => {\n    observe(window.PerformanceObserver, 'event', measureResponsiveness(isLoggingEnabled), true, { durationThreshold: 50 });\n    \n    return result;\n};","//@ts-check\nimport hidden from './entries/hidden.js';\nimport client from './entries/client.js';\nimport navStart from './entries/navStart.js';\nimport navFinish from './entries/navFinish.js';\nimport wixStart from './entries/wixStart.js';\nimport wixFinish from './entries/wixFinish.js';\nimport scripts from './entries/scripts.js';\nimport images from './entries/images.js';\nimport fonts from './entries/fonts.js';\nimport fcp from './entries/fcp.js';\nimport tti_tbt from './entries/tti-tbt.js';\nimport lcp from './entries/lcp.js';\nimport cls from './entries/cls.js';\nimport fid from './entries/fid.js';\nimport pages from './entries/pages.js';\nimport crux, {addGetters, getCurrentLcp} from './entries/crux.js';\nimport crux_cls from './entries/crux-cls.js';\nimport { startMeasureResponsiveness } from './entries/responsiveness';\n\nimport config from './utils/config.js';\nimport {batch, extract} from './utils/utils.js';\nimport {fireEvent} from './utils/windowEvents.js';\nimport {prepareMeasurement} from './utils/sequence.js';\n\nimport loadInfo from './actions/loadInfo.js';\nimport {markAndMeasure} from './actions/markAndMeasure.js';\nimport log from './actions/log.js';\nimport alert from './info/alert.js';\n\nconst TAG_ID = 'wix-perf-measure';\n\nmeasure();\n\nfunction measure() {\n    if (typeof Promise !== 'function' || !/** @type {any} */(Promise).allSettled) {\n        return;\n    }\n\n    const {document, performance} = window;\n    const script = document.currentScript || document.getElementById(TAG_ID);\n    if (script) {\n        config.load(window, script);\n    }\n    const {noMeasure, log: isLogging, label} = config;\n\n    /** @type {import('./utils/utils.js').State} */\n    const state = [window, performance, window.PerformanceObserver, window.setTimeout, window.clearTimeout];\n    const measurements = obtainMeasurements(state, isLogging);\n    loadInfo(state, document, config.src, measurements, getCurrentLcp, cls);\n    Object.freeze(measurements);\n\n    const together = measurements.slice(0, 3);\n    const individually = measurements.slice(3, 5);\n    if (!noMeasure) {\n        markAndMeasure(performance, together);\n    }\n    if (isLogging) {\n        log(together, individually);\n    }\n\n    window[label] = measurements;\n    fireEvent(window, label, measurements);\n\n    alert(window, measurements);\n}\n\n/**\n * @param {import('./utils/utils.js').State} state \n * @param {boolean} isLogging\n */\nfunction obtainMeasurements(state, isLogging) {\n    const environment = batch('environment', client(state), navStart(state), wixStart(state));\n\n    const visibility = hidden(state);\n\n    const initialPaint = fcp(state);\n    const interaction = fid(state);\n    const interactive = tti_tbt(state, extract(initialPaint, 'fcp'), interaction);\n    const lastPaint = lcp(state, interactive, visibility, interaction);\n\n    const ss = scripts(state);\n    const is = images(state);\n    const fs = fonts(state);\n\n    const loaded = batch('loaded', interactive, lastPaint, ss, is, fs, navFinish(state), wixFinish(state, interactive))\n        .then(result => Object.assign(result, cls(state)));\n\n    const cruxResult = crux(state, visibility);\n    const measurements = [environment, initialPaint, loaded, interaction, visibility, pages(state), cruxResult, crux_cls(state, cruxResult), startMeasureResponsiveness(isLogging)]\n        .map(measurement => measurement.then(payload => prepareMeasurement(state[0], payload)));\n\n    return addGetters(measurements);\n}\n","//@ts-check\nimport {PIXEL_RATIO_FACTOR, MAX_DOWNLOAD_SPEED} from '../utils/constants.js';\nimport {isBoolean, isNumber} from '../utils/utils.js';\nimport config from '../utils/config.js';\n\n/**\n * Get client attributes\n * @param {import('../utils/utils.js').State} state\n * @returns {Promise}\n */\nexport default function client([window]) {\n    const {screen} = window;\n    const result = {\n        screenRes: `${screen.width}x${screen.height}`,\n        availScreenRes: `${screen.availWidth}x${screen.availHeight}`,\n        windowInner: `${window.innerWidth}x${window.innerHeight}`,\n        windowOuter: `${window.outerWidth}x${window.outerHeight}`,\n        devicePixelRatio: window.devicePixelRatio * PIXEL_RATIO_FACTOR,\n        colorDepth: screen.colorDepth\n    };\n    if (config.version) {\n        result.version = config.version;\n    }\n    const {orientation} = screen;\n    if (orientation?.type) {\n        result.orientation = orientation.type;\n    }\n    /** @type {Object} */\n    const {navigator} = window;\n    const {connection, deviceMemory, hardwareConcurrency} = navigator;\n    if (hardwareConcurrency) {\n        result.cores = hardwareConcurrency;\n    }\n    if (deviceMemory) {\n        result.memory = Math.floor(deviceMemory);\n    }\n    if (connection) {\n        const {type, effectiveType, rtt, downlink, saveData} = connection;\n        if (type) {\n            result.networkType = type;\n        }\n        if (effectiveType) {\n            result.effectiveType = effectiveType;\n        }\n        if (isNumber(rtt) && rtt) {\n            result.rtt = rtt;\n        }\n        if (downlink) {\n            result.download = Math.min(downlink, MAX_DOWNLOAD_SPEED);\n        }\n        if (isBoolean(saveData)) {\n            result.saveData = saveData;\n        }\n    }\n    if (window.matchMedia) {\n        const mql = window.matchMedia('(prefers-reduced-motion:reduce)');\n        result.reducedMotion = mql.matches;\n    }\n\n    return !navigator.getBattery ?\n        Promise.resolve(result) :\n        navigator.getBattery()\n            .then(({charging, level}) => {\n                result.lowBattery = charging === false && level < 0.1;\n                return result;\n            })\n            .catch(() => result);\n}\n","//@ts-check\nimport {addField} from '../utils/utils.js';\nimport getWixBiSession from '../utils/wixBiSession.js';\n\nconst entryType = 'wix-start';\n\n/**\n * Initial Wix session attributes\n * @param {import('../utils/utils.js').State} state\n */\nexport default function wixStart([window]) {\n    const wixBiSession = getWixBiSession(window);\n    if (!wixBiSession) {\n        return Promise.reject(entryType);\n    }\n\n    const result = {};\n\n    const {thunderboltVersion, viewerModel, boltVersion, rendererModel} = /** @type {Object} */(window);\n    const {site = {}} = viewerModel?.site || rendererModel || {};\n    addField(result, 'msid', site.metaSiteId || wixBiSession.msId);\n\n    const commonConfig = window.commonConfig || viewerModel?.siteFeaturesConfigs.commonConfig;\n    addField(result, '_brandId', commonConfig?.brand);\n\n    if (thunderboltVersion) {\n        viewerInfo(site.isResponsive ? 'thunderboltResponsive' : 'thunderbolt', thunderboltVersion);\n    } else {\n        viewerInfo(wixBiSession.renderType, boltVersion);\n    }\n\n    addField(result, 'dc', wixBiSession.dc || site.dc);\n\n    return Promise.resolve(result);\n\n    function viewerInfo(viewerName, v) {\n        addField(result, 'viewerName', viewerName);\n        addField(result, 'v', v);\n    }\n}\n","//@ts-check\nimport {isScript} from '../utils/observeResources.js';\nimport collectResources from '../utils/collectResources.js';\n\n/**\n * Get scripts resources attributes \n * @param {import('../utils/utils.js').State} state\n */\nexport default function scripts(state) {\n    return collectResources(state, 'scripts', {filter: isScript});\n}\n","//@ts-check\nimport {isImage} from '../utils/observeResources.js';\nimport collectResources from '../utils/collectResources.js';\n\n/**\n * Get image resources attributes \n * @param {import('../utils/utils.js').State} state\n */\nexport default function images(state) {\n    return collectResources(state, 'images', {filter: isImage});\n}\n","//@ts-check\nimport {isFont} from '../utils/observeResources.js';\nimport collectResources from '../utils/collectResources.js';\n\n/**\n * Get font resources attributes \n * @param {import('../utils/utils.js').State} state\n */\nexport default function fonts(state) {\n    return collectResources(state, 'fonts', {filter: isFont});\n}\n","const PARAM = 'showperfinfo';\n\n/**\n * If \"showPerfInfo\" URL param is specified then display metrics as alert\n * @param {Window} window \n * @param {Array<Promise<{[key: string]: string | number}>> measurements\n * @returns {boolean}\n */\nexport default function alert(window, measurements) {\n    const {URLSearchParams} = /** @type {Object} */(window);\n    if (URLSearchParams) {\n        /** @type {URLSearchParams} */\n        const searchParams = new URLSearchParams(window.location.search);\n        for (const key of searchParams.keys()) {\n            if (key.toLowerCase() === PARAM) {\n                Promise.all(measurements.slice(0, 3)).then(([{viewerName, ttfb}, {fcp}, {lcp, cls, tti, tbt}]) => {\n                    window.alert(`Viewer=${viewerName}\\nTTFB=${ttfb}\\nFCP=${fcp}\\nLCP=${lcp}\\nCLS=${cls}\\nTTI=${tti}\\nTBT=${tbt}`);\n                });\n                return true;\n            }\n        }\n    }\n    return false;\n}\n"],"sourceRoot":""}